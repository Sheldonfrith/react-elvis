"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/react-elvis/components/elvis-context/ElvisProvider.tsx":
/*!********************************************************************!*\
  !*** ./src/react-elvis/components/elvis-context/ElvisProvider.tsx ***!
  \********************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ElvisProvider: function() { return /* binding */ ElvisProvider; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _config_messages__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../config/messages */ \"./src/react-elvis/config/messages.ts\");\n/* harmony import */ var _helpers_myAssert__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../helpers/myAssert */ \"./src/react-elvis/helpers/myAssert.ts\");\n/* harmony import */ var _hooks_useErrorDisplaySetup__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../hooks/useErrorDisplaySetup */ \"./src/react-elvis/hooks/useErrorDisplaySetup.ts\");\n/* harmony import */ var _hooks_useLoadingDisplaySetup__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../hooks/useLoadingDisplaySetup */ \"./src/react-elvis/hooks/useLoadingDisplaySetup.ts\");\n/* harmony import */ var _ElvisContext__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ElvisContext */ \"./src/react-elvis/components/elvis-context/ElvisContext.tsx\");\n/* harmony import */ var _helpers_findErrorDisplayers_Internals__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./helpers/findErrorDisplayers_Internals */ \"./src/react-elvis/components/elvis-context/helpers/findErrorDisplayers_Internals.ts\");\n/* harmony import */ var _helpers_handleErrorDetected_Internals__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./helpers/handleErrorDetected_Internals */ \"./src/react-elvis/components/elvis-context/helpers/handleErrorDetected_Internals.ts\");\n/* harmony import */ var _helpers_processAsyncFunctionExecutionQueue__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./helpers/processAsyncFunctionExecutionQueue */ \"./src/react-elvis/components/elvis-context/helpers/processAsyncFunctionExecutionQueue.ts\");\n/* harmony import */ var _helpers_identicalAsyncFunctionRegistered__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./helpers/identicalAsyncFunctionRegistered */ \"./src/react-elvis/components/elvis-context/helpers/identicalAsyncFunctionRegistered.ts\");\n/* harmony import */ var _helpers_catchPromiseErrors__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./helpers/catchPromiseErrors */ \"./src/react-elvis/components/elvis-context/helpers/catchPromiseErrors.ts\");\n/* harmony import */ var _hooks_useRegisterAsyncFunction__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../hooks/useRegisterAsyncFunction */ \"./src/react-elvis/hooks/useRegisterAsyncFunction.ts\");\n/* harmony import */ var _hooks_useRegisterAsyncFunctionAbortable__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../hooks/useRegisterAsyncFunctionAbortable */ \"./src/react-elvis/hooks/useRegisterAsyncFunctionAbortable.ts\");\n/* harmony import */ var _helpers_resetableAbortController__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./helpers/resetableAbortController */ \"./src/react-elvis/components/elvis-context/helpers/resetableAbortController.ts\");\n/**MIT License\r\n\r\nCopyright (c) 2024 Sheldon Frith\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n\r\nFor more information and to contribute to this project, visit:\r\nhttps://github.com/Sheldonfrith/react-elvis\r\n*/ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst ElvisProvider = (param)=>{\n    let { config: elvisConfig, children } = param;\n    _s();\n    var _s1 = $RefreshSig$(), _s2 = $RefreshSig$(), _s3 = $RefreshSig$(), _s4 = $RefreshSig$(), _s5 = $RefreshSig$(), _s6 = $RefreshSig$();\n    //! STATE VARIABLES //\n    const [loadingDisplayers, setLoadingDisplayers] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [errorDisplayers, setErrorDisplayers] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [defaultLoadingDisplayer, setDefaultLoadingDisplayer] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)();\n    const [defaultErrorDisplayer, setDefaultErrorDisplayer] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)();\n    const [pendingUncatchableErrors, setPendingUncatchableErrors] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [registeredFunctions, setRegisteredFunctions] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({});\n    const [abortControllers, setAbortControllers] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({});\n    const [wrappedFunctions, setWrappedFunctions] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({});\n    const [asyncFunctionExecutionQueue, setAsyncFunctionExecutionQueue] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [abortEventsQueue, setAbortEventsQueue] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    // ! HELPER TO SETUP ABORT CONTROLLER ON NEW REGISTER REQUEST //\n    const setupAbortControllerForNewAsyncFunction = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((id)=>{\n        setAbortControllers((prev)=>{\n            if (id in prev && prev[id]) return prev;\n            const c = (0,_helpers_resetableAbortController__WEBPACK_IMPORTED_MODULE_14__.resetableAbortController)((fresh)=>setAbortControllers((prev)=>{\n                    return {\n                        ...prev,\n                        [id]: fresh\n                    };\n                }), (e)=>{\n                setAbortEventsQueue((prev)=>{\n                    return [\n                        ...prev,\n                        id\n                    ];\n                });\n            });\n            return {\n                ...prev,\n                [id]: c\n            };\n        });\n    }, [\n        setAbortControllers\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!abortEventsQueue.length) return;\n        setAbortEventsQueue((prev)=>{\n            const s = new Set(prev);\n            s.forEach((id)=>{\n                handleLoadingCancel(id);\n            });\n            return [];\n        });\n    }, [\n        abortEventsQueue\n    ]);\n    //! Handling function executions //\n    //handle async function executions, try all of them whenever execution queue or registered functions changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!asyncFunctionExecutionQueue.length) return;\n        (0,_helpers_processAsyncFunctionExecutionQueue__WEBPACK_IMPORTED_MODULE_9__.processAsyncFunctionExecutionQueue)(asyncFunctionExecutionQueue, registeredFunctions, runAsyncFunctionWithEventHandlers, setAsyncFunctionExecutionQueue);\n    }, [\n        asyncFunctionExecutionQueue,\n        registeredFunctions\n    ]);\n    //! DISPLAYER FINDERS //\n    const findLoadingDisplayer = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((id)=>{\n        const displayer = loadingDisplayers.find((d)=>d.id === id);\n        const d = displayer || defaultLoadingDisplayer;\n        (0,_helpers_myAssert__WEBPACK_IMPORTED_MODULE_3__.assert)(d, \"No default Loading Displayer found. \".concat(id, \" and \").concat(JSON.stringify(loadingDisplayers)));\n        return d;\n    }, [\n        loadingDisplayers,\n        defaultLoadingDisplayer\n    ]);\n    const findErrorDisplayers = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((id, error)=>{\n        return (0,_helpers_findErrorDisplayers_Internals__WEBPACK_IMPORTED_MODULE_7__.findErrorDisplayers_Internals)(errorDisplayers, defaultErrorDisplayer, id, error);\n    }, [\n        errorDisplayers,\n        defaultErrorDisplayer\n    ]);\n    const findAllErrorDisplayers = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((id)=>{\n        const displayers = errorDisplayers.filter((d)=>d.id === id);\n        if (displayers.length > 0) {\n            return displayers;\n        } else {\n            if (defaultErrorDisplayer) {\n                return [\n                    defaultErrorDisplayer\n                ];\n            }\n            throw new Error(\"No default Error Displayer found.\");\n        }\n    }, [\n        errorDisplayers,\n        defaultErrorDisplayer\n    ]);\n    //! EVENT HANDLERS //\n    const handleLoadingStart = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((id)=>{\n        var _f_config;\n        const d = findLoadingDisplayer(id);\n        const f = registeredFunctions[id];\n        d.onLoadingStart((f === null || f === void 0 ? void 0 : (_f_config = f.config) === null || _f_config === void 0 ? void 0 : _f_config.loading) || _config_messages__WEBPACK_IMPORTED_MODULE_2__.DefaultUserFacingLoading, abortControllers[id]);\n        // error displayer\n        const errorDisplayers = findAllErrorDisplayers(id);\n        errorDisplayers.forEach((d)=>{\n            d.onNewFunctionCall();\n        });\n    }, [\n        findAllErrorDisplayers,\n        findLoadingDisplayer,\n        registeredFunctions\n    ]);\n    const handleLoadingCancel = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((id)=>{\n        var _f_config;\n        const d = findLoadingDisplayer(id);\n        const f = registeredFunctions[id];\n        d.onLoadingCancel((f === null || f === void 0 ? void 0 : (_f_config = f.config) === null || _f_config === void 0 ? void 0 : _f_config.cancelled) || _config_messages__WEBPACK_IMPORTED_MODULE_2__.DefaultUserFacingCancelled);\n    }, [\n        findLoadingDisplayer,\n        registeredFunctions\n    ]);\n    const handleLoadingEnd = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((id)=>{\n        var _f_config;\n        const d = findLoadingDisplayer(id);\n        const f = registeredFunctions[id];\n        d.onLoadingEnd((f === null || f === void 0 ? void 0 : (_f_config = f.config) === null || _f_config === void 0 ? void 0 : _f_config.success) || _config_messages__WEBPACK_IMPORTED_MODULE_2__.DefaultUserFacingSuccess);\n    }, [\n        findLoadingDisplayer,\n        registeredFunctions\n    ]);\n    const handleErrorDetected = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((id, error)=>{\n        (0,_helpers_handleErrorDetected_Internals__WEBPACK_IMPORTED_MODULE_8__.handleErrorDetected_Internals)(id, error, registeredFunctions, findErrorDisplayers, findLoadingDisplayer);\n    }, [\n        findLoadingDisplayer,\n        findErrorDisplayers,\n        registeredFunctions\n    ]);\n    //! DEFAULT DISPLAYERS CHECK //\n    //wait for app to load, then check for default displayers\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        setTimeout(()=>{\n            setDefaultErrorDisplayer((prev)=>{\n                if (!prev && !(elvisConfig === null || elvisConfig === void 0 ? void 0 : elvisConfig.disableDefaultErrorDisplayerCheck)) {\n                    throw new Error(\"No default error displayer found. Please register a default error displayer or disable the default displayer check using the config prop in the Eals Provider.\");\n                }\n                return prev;\n            });\n            setDefaultLoadingDisplayer((prev)=>{\n                if (!prev && !(elvisConfig === null || elvisConfig === void 0 ? void 0 : elvisConfig.disableDefaultLoadingDisplayerCheck)) {\n                    throw new Error(\"No default loading displayer found. Please register a default loading displayer or disable the default displayer check using the config prop in the Eals Provider.\");\n                }\n                return prev;\n            });\n        }, (elvisConfig === null || elvisConfig === void 0 ? void 0 : elvisConfig.graceTimeToDetectDefaultDisplayers) || 1000);\n    }, []);\n    //! UNHANDLED PROMISE REJECTION HANDLER //\n    // filter for when the user's code is missing promise rejection handlers\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        registerUnabortable(\"unhandledrejection\", async ()=>{}, _config_messages__WEBPACK_IMPORTED_MODULE_2__.unhandledPromiseRejectionError);\n        const unhandledRejectionHandler = (event)=>{\n            setPendingUncatchableErrors((prev)=>{\n                return [\n                    ...prev,\n                    {\n                        query: {\n                            id: \"unhandledrejection\",\n                            versionTimestamp: -1,\n                            callback: async ()=>{},\n                            config: _config_messages__WEBPACK_IMPORTED_MODULE_2__.unhandledPromiseRejectionError,\n                            abortable: \"not-abortable\"\n                        },\n                        error: event.reason\n                    }\n                ];\n            });\n        };\n        window.addEventListener(\"unhandledrejection\", unhandledRejectionHandler, {\n            once: true\n        });\n        return ()=>{\n            window.removeEventListener(\"unhandledrejection\", unhandledRejectionHandler);\n        };\n    }, []);\n    // handle the uncatchable errors\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (pendingUncatchableErrors.length > 0) {\n            const error = pendingUncatchableErrors[0];\n            handleErrorDetected(error.query.id, error.error);\n            setPendingUncatchableErrors((prev)=>{\n                return prev.slice(1);\n            });\n        }\n    }, [\n        pendingUncatchableErrors,\n        handleErrorDetected\n    ]);\n    //! WRAPPERS - CORE FUNCTIONALITY //\n    const createFunctionExecutionRequestAndGetPromise = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((id, versionTimestamp, newArgs)=>{\n        return new Promise((resolve, reject)=>{\n            setAsyncFunctionExecutionQueue((prev)=>{\n                return [\n                    ...prev,\n                    {\n                        calledAt: Date.now(),\n                        id,\n                        versionTimestamp,\n                        args: newArgs,\n                        resolve,\n                        reject\n                    }\n                ];\n            });\n        });\n    }, []);\n    const runAsyncFunctionWithEventHandlers = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async (f, args)=>{\n        try {\n            // Set loading to true while the request is in progress\n            handleLoadingStart(f.id);\n            if (f.abortable === \"abortable\") {\n                const abortController = abortControllers[f.id];\n                (0,_helpers_myAssert__WEBPACK_IMPORTED_MODULE_3__.assert)(abortController, \"No abort controller found for id \" + f.id);\n                const [result, error] = await (0,_helpers_catchPromiseErrors__WEBPACK_IMPORTED_MODULE_11__.catchPromiseErrors)(// We handle passing in the abort controller for them, to make the final API cleaner\n                f.callback(abortController, ...args));\n                if (error) {\n                    throw error;\n                }\n                handleLoadingEnd(f.id);\n                return result;\n            } else {\n                const [result, error] = await (0,_helpers_catchPromiseErrors__WEBPACK_IMPORTED_MODULE_11__.catchPromiseErrors)(f.callback(...args));\n                if (error) {\n                    throw error;\n                }\n                handleLoadingEnd(f.id);\n                return result;\n            }\n        } catch (error) {\n            handleLoadingEnd(f.id);\n            handleErrorDetected(f.id, error);\n        }\n    }, [\n        handleLoadingStart,\n        handleLoadingEnd,\n        handleErrorDetected,\n        abortControllers\n    ]);\n    //! Display Registration Helpers ///\n    function registerLoadingDisplayer(c) {\n        setLoadingDisplayers((prev)=>{\n            return [\n                ...prev,\n                {\n                    ...c\n                }\n            ];\n        });\n    }\n    function registerDefaultLoadingDisplayer(c) {\n        setDefaultLoadingDisplayer({\n            ...c\n        });\n    }\n    //! NEW FUNCTION REGISTRATION FUNCTIONS //\n    const registerUnabortable = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((id, f, config)=>{\n        const abortable = \"not-abortable\";\n        setRegisteredFunctions((prev)=>{\n            if ((0,_helpers_identicalAsyncFunctionRegistered__WEBPACK_IMPORTED_MODULE_10__.identicalAsyncFunctionRegistered)(id, f, config, abortable, prev)) {\n                return prev;\n            }\n            const timestamp = Date.now();\n            const p = prev[id];\n            const isNew = !p;\n            const n = isNew ? {\n                id,\n                versionTimestamp: timestamp,\n                callback: f,\n                abortable,\n                config\n            } : {\n                ...p,\n                versionTimestamp: timestamp,\n                callback: f,\n                abortable,\n                config\n            };\n            setWrappedFunctions((prev)=>{\n                return {\n                    ...prev,\n                    [id]: async function() {\n                        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n                            args[_key] = arguments[_key];\n                        }\n                        return await createFunctionExecutionRequestAndGetPromise(id, timestamp, args);\n                    }\n                };\n            });\n            return {\n                ...prev,\n                [id]: n\n            };\n        });\n        return wrappedFunctions[id];\n    }, [\n        registeredFunctions,\n        abortControllers\n    ]);\n    const registerAbortable = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((id, f, config)=>{\n        const abortable = \"abortable\";\n        setRegisteredFunctions((prev)=>{\n            if ((0,_helpers_identicalAsyncFunctionRegistered__WEBPACK_IMPORTED_MODULE_10__.identicalAsyncFunctionRegistered)(id, f, config, abortable, prev)) {\n                return prev;\n            }\n            const timestamp = Date.now();\n            const p = prev[id];\n            const isNew = !p;\n            const n = isNew ? {\n                id,\n                versionTimestamp: timestamp,\n                callback: f,\n                abortable,\n                config\n            } : {\n                ...p,\n                versionTimestamp: timestamp,\n                callback: f,\n                abortable,\n                config\n            };\n            if (isNew) {\n                setupAbortControllerForNewAsyncFunction(id);\n            }\n            setWrappedFunctions((prev)=>{\n                return {\n                    ...prev,\n                    [id]: async function() {\n                        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n                            args[_key] = arguments[_key];\n                        }\n                        return await createFunctionExecutionRequestAndGetPromise(id, timestamp, args);\n                    }\n                };\n            });\n            return {\n                ...prev,\n                [id]: n\n            };\n        });\n        return wrappedFunctions[id];\n    }, [\n        registeredFunctions,\n        abortControllers,\n        wrappedFunctions\n    ]);\n    //! USER FACING FUNCTIONS\n    const ufRegisterAbortable = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(_s1((identifier, f_unwrapped, config)=>{\n        _s1();\n        return (0,_hooks_useRegisterAsyncFunctionAbortable__WEBPACK_IMPORTED_MODULE_13__.useRegisterAsyncFunctionAbortable)(identifier, f_unwrapped, config, registerAbortable);\n    }, \"pG+ddd3ceO8NNhtw5djzjfwIua0=\", false, function() {\n        return [\n            _hooks_useRegisterAsyncFunctionAbortable__WEBPACK_IMPORTED_MODULE_13__.useRegisterAsyncFunctionAbortable\n        ];\n    }), [\n        registerAbortable\n    ]);\n    const ufRegisterUnabortable = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(_s2((identifier, f_unwrapped, config)=>{\n        _s2();\n        return (0,_hooks_useRegisterAsyncFunction__WEBPACK_IMPORTED_MODULE_12__.useRegisterAsyncFunction)(identifier, f_unwrapped, config, registerUnabortable);\n    }, \"kmiLVZYwglOpY2ekQZ/dGLfsRIM=\", false, function() {\n        return [\n            _hooks_useRegisterAsyncFunction__WEBPACK_IMPORTED_MODULE_12__.useRegisterAsyncFunction\n        ];\n    }), [\n        registerUnabortable\n    ]);\n    const getAbortController = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((id)=>{\n        if (!abortControllers[id]) {\n            throw new Error(\"No abort controller found for id \" + id);\n        }\n        return abortControllers[id];\n    }, [\n        abortControllers\n    ]);\n    function displayErrorDefault() {\n        _s3();\n        return (0,_hooks_useErrorDisplaySetup__WEBPACK_IMPORTED_MODULE_4__.useErrorDisplaySetup)(\"\", (c)=>setDefaultErrorDisplayer({\n                ...c\n            }));\n    }\n    _s3(displayErrorDefault, \"23OYwRnZckYMmB+af495KpBg5w8=\", false, function() {\n        return [\n            _hooks_useErrorDisplaySetup__WEBPACK_IMPORTED_MODULE_4__.useErrorDisplaySetup\n        ];\n    });\n    function displayErrorHandle(id) {\n        _s4();\n        return (0,_hooks_useErrorDisplaySetup__WEBPACK_IMPORTED_MODULE_4__.useErrorDisplaySetup)(id, (c)=>{\n            setErrorDisplayers((prev)=>{\n                return [\n                    ...prev,\n                    {\n                        ...c\n                    }\n                ];\n            });\n        });\n    }\n    _s4(displayErrorHandle, \"23OYwRnZckYMmB+af495KpBg5w8=\", false, function() {\n        return [\n            _hooks_useErrorDisplaySetup__WEBPACK_IMPORTED_MODULE_4__.useErrorDisplaySetup\n        ];\n    });\n    function displayLoadingDefault(durationOfCancelledState, durationOfSuccessState) {\n        _s5();\n        return (0,_hooks_useLoadingDisplaySetup__WEBPACK_IMPORTED_MODULE_5__.useLoadingDisplaySetup)(\"\", registerDefaultLoadingDisplayer, durationOfCancelledState, durationOfSuccessState);\n    }\n    _s5(displayLoadingDefault, \"KDddsSIcc9cVcaf8CcKX6DtuEII=\", false, function() {\n        return [\n            _hooks_useLoadingDisplaySetup__WEBPACK_IMPORTED_MODULE_5__.useLoadingDisplaySetup\n        ];\n    });\n    function displayLoadingHandle(id, durationOfCancelledState, durationOfSuccessState) {\n        _s6();\n        return (0,_hooks_useLoadingDisplaySetup__WEBPACK_IMPORTED_MODULE_5__.useLoadingDisplaySetup)(id, registerLoadingDisplayer, durationOfCancelledState, durationOfSuccessState);\n    }\n    _s6(displayLoadingHandle, \"KDddsSIcc9cVcaf8CcKX6DtuEII=\", false, function() {\n        return [\n            _hooks_useLoadingDisplaySetup__WEBPACK_IMPORTED_MODULE_5__.useLoadingDisplaySetup\n        ];\n    });\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ElvisContext__WEBPACK_IMPORTED_MODULE_6__.ElvisContext.Provider, {\n        value: {\n            async: {\n                wrappedFunctions: wrappedFunctions,\n                register: ufRegisterUnabortable,\n                abortable: {\n                    register: ufRegisterAbortable,\n                    getAbortController\n                }\n            },\n            display: {\n                error: {\n                    handle: displayErrorHandle,\n                    default: displayErrorDefault\n                },\n                loading: {\n                    handle: displayLoadingHandle,\n                    default: displayLoadingDefault\n                }\n            }\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\sheld\\\\OneDrive\\\\Documents\\\\GitHub\\\\react-elvis\\\\example\\\\src\\\\react-elvis\\\\components\\\\elvis-context\\\\ElvisProvider.tsx\",\n        lineNumber: 552,\n        columnNumber: 5\n    }, undefined);\n};\n_s(ElvisProvider, \"ocfnGuZygY/azbygjMOoZMLxaxI=\");\n_c = ElvisProvider;\nvar _c;\n$RefreshReg$(_c, \"ElvisProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVhY3QtZWx2aXMvY29tcG9uZW50cy9lbHZpcy1jb250ZXh0L0VsdmlzUHJvdmlkZXIudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF3QkE7O0FBT2U7QUFNZ0I7QUFTaUI7QUFFd0I7QUFDSTtBQUM5QjtBQUMwQztBQUNBO0FBQ1U7QUFDSjtBQUM1QjtBQUNjO0FBQ2tCO0FBQ3BCO0FBRXZFLE1BQU1vQixnQkFFVDtRQUFDLEVBQUVDLFFBQVFDLFdBQVcsRUFBRUMsUUFBUSxFQUFFOzs7SUFDcEMsc0JBQXNCO0lBQ3RCLE1BQU0sQ0FBQ0MsbUJBQW1CQyxxQkFBcUIsR0FBR3hCLCtDQUFRQSxDQUV4RCxFQUFFO0lBQ0osTUFBTSxDQUFDeUIsaUJBQWlCQyxtQkFBbUIsR0FBRzFCLCtDQUFRQSxDQUFtQixFQUFFO0lBQzNFLE1BQU0sQ0FBQzJCLHlCQUF5QkMsMkJBQTJCLEdBQ3pENUIsK0NBQVFBO0lBQ1YsTUFBTSxDQUFDNkIsdUJBQXVCQyx5QkFBeUIsR0FDckQ5QiwrQ0FBUUE7SUFDVixNQUFNLENBQUMrQiwwQkFBMEJDLDRCQUE0QixHQUFHaEMsK0NBQVFBLENBRXRFLEVBQUU7SUFDSixNQUFNLENBQUNpQyxxQkFBcUJDLHVCQUF1QixHQUFHbEMsK0NBQVFBLENBRTVELENBQUM7SUFDSCxNQUFNLENBQUNtQyxrQkFBa0JDLG9CQUFvQixHQUFHcEMsK0NBQVFBLENBRXRELENBQUM7SUFFSCxNQUFNLENBQUNxQyxrQkFBa0JDLG9CQUFvQixHQUFHdEMsK0NBQVFBLENBRXRELENBQUM7SUFDSCxNQUFNLENBQUN1Qyw2QkFBNkJDLCtCQUErQixHQUNqRXhDLCtDQUFRQSxDQUE2QixFQUFFO0lBQ3pDLE1BQU0sQ0FBQ3lDLGtCQUFrQkMsb0JBQW9CLEdBQUcxQywrQ0FBUUEsQ0FBVyxFQUFFO0lBRXJFLGdFQUFnRTtJQUNoRSxNQUFNMkMsMENBQTBDekMsa0RBQVdBLENBQ3pE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QVc7b0JBQ1R1QyxVQUFVZDtvQkFDVkk7Z0JBQ0Y7WUFDRjtZQUNBVyxTQUFTO2dCQUNQbEUsT0FBTztvQkFDTG1FLFFBQVFWO29CQUNSVyxTQUFTWjtnQkFDWDtnQkFDQWhELFNBQVM7b0JBQ1AyRCxRQUFRTjtvQkFDUk8sU0FBU1Y7Z0JBQ1g7WUFDRjtRQUNGO2tCQUVDbEc7Ozs7OztBQUdQLEVBQUU7R0FwZ0JXSDtLQUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvcmVhY3QtZWx2aXMvY29tcG9uZW50cy9lbHZpcy1jb250ZXh0L0VsdmlzUHJvdmlkZXIudHN4PzhlZWIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqTUlUIExpY2Vuc2VcclxuXHJcbkNvcHlyaWdodCAoYykgMjAyNCBTaGVsZG9uIEZyaXRoXHJcblxyXG5QZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XHJcbm9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlIFwiU29mdHdhcmVcIiksIHRvIGRlYWxcclxuaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0c1xyXG50byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsXHJcbmNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpc1xyXG5mdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxyXG5cclxuVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW4gYWxsXHJcbmNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXHJcblxyXG5USEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXHJcbklNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxyXG5GSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEVcclxuQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxyXG5MSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLFxyXG5PVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRVxyXG5TT0ZUV0FSRS5cclxuXHJcbkZvciBtb3JlIGluZm9ybWF0aW9uIGFuZCB0byBjb250cmlidXRlIHRvIHRoaXMgcHJvamVjdCwgdmlzaXQ6XHJcbmh0dHBzOi8vZ2l0aHViLmNvbS9TaGVsZG9uZnJpdGgvcmVhY3QtZWx2aXNcclxuKi9cclxuXHJcbmltcG9ydCBSZWFjdCwge1xyXG4gIHVzZVN0YXRlLFxyXG4gIHVzZUVmZmVjdCxcclxuICB1c2VDYWxsYmFjayxcclxuICBQcm9wc1dpdGhDaGlsZHJlbixcclxufSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHtcclxuICBEZWZhdWx0VXNlckZhY2luZ0xvYWRpbmcsXHJcbiAgRGVmYXVsdFVzZXJGYWNpbmdDYW5jZWxsZWQsXHJcbiAgRGVmYXVsdFVzZXJGYWNpbmdTdWNjZXNzLFxyXG4gIHVuaGFuZGxlZFByb21pc2VSZWplY3Rpb25FcnJvcixcclxufSBmcm9tIFwiLi4vLi4vY29uZmlnL21lc3NhZ2VzXCI7XHJcbmltcG9ydCB7XHJcbiAgRXJyb3JEaXNwbGF5ZXIsXHJcbiAgVXNlckZhY2luZ0FzeW5jRnVuY3Rpb24sXHJcbiAgRWx2aXNDb25maWcsXHJcbiAgTG9hZGluZ0Rpc3BsYXllcixcclxuICBFbHZpc0Rpc3BsYXlDb25maWcsXHJcbiAgRnVuY3Rpb25FeGVjdXRpb25SZXF1ZXN0LFxyXG59IGZyb20gXCIuLi8uLi9oZWxwZXJzL3R5cGVzXCI7XHJcbmltcG9ydCB7IGFzc2VydCB9IGZyb20gXCIuLi8uLi9oZWxwZXJzL215QXNzZXJ0XCI7XHJcblxyXG5pbXBvcnQgeyB1c2VFcnJvckRpc3BsYXlTZXR1cCB9IGZyb20gXCIuLi8uLi9ob29rcy91c2VFcnJvckRpc3BsYXlTZXR1cFwiO1xyXG5pbXBvcnQgeyB1c2VMb2FkaW5nRGlzcGxheVNldHVwIH0gZnJvbSBcIi4uLy4uL2hvb2tzL3VzZUxvYWRpbmdEaXNwbGF5U2V0dXBcIjtcclxuaW1wb3J0IHsgRWx2aXNDb250ZXh0IH0gZnJvbSBcIi4vRWx2aXNDb250ZXh0XCI7XHJcbmltcG9ydCB7IGZpbmRFcnJvckRpc3BsYXllcnNfSW50ZXJuYWxzIH0gZnJvbSBcIi4vaGVscGVycy9maW5kRXJyb3JEaXNwbGF5ZXJzX0ludGVybmFsc1wiO1xyXG5pbXBvcnQgeyBoYW5kbGVFcnJvckRldGVjdGVkX0ludGVybmFscyB9IGZyb20gXCIuL2hlbHBlcnMvaGFuZGxlRXJyb3JEZXRlY3RlZF9JbnRlcm5hbHNcIjtcclxuaW1wb3J0IHsgcHJvY2Vzc0FzeW5jRnVuY3Rpb25FeGVjdXRpb25RdWV1ZSB9IGZyb20gXCIuL2hlbHBlcnMvcHJvY2Vzc0FzeW5jRnVuY3Rpb25FeGVjdXRpb25RdWV1ZVwiO1xyXG5pbXBvcnQgeyBpZGVudGljYWxBc3luY0Z1bmN0aW9uUmVnaXN0ZXJlZCB9IGZyb20gXCIuL2hlbHBlcnMvaWRlbnRpY2FsQXN5bmNGdW5jdGlvblJlZ2lzdGVyZWRcIjtcclxuaW1wb3J0IHsgY2F0Y2hQcm9taXNlRXJyb3JzIH0gZnJvbSBcIi4vaGVscGVycy9jYXRjaFByb21pc2VFcnJvcnNcIjtcclxuaW1wb3J0IHsgdXNlUmVnaXN0ZXJBc3luY0Z1bmN0aW9uIH0gZnJvbSBcIi4uLy4uL2hvb2tzL3VzZVJlZ2lzdGVyQXN5bmNGdW5jdGlvblwiO1xyXG5pbXBvcnQgeyB1c2VSZWdpc3RlckFzeW5jRnVuY3Rpb25BYm9ydGFibGUgfSBmcm9tIFwiLi4vLi4vaG9va3MvdXNlUmVnaXN0ZXJBc3luY0Z1bmN0aW9uQWJvcnRhYmxlXCI7XHJcbmltcG9ydCB7IHJlc2V0YWJsZUFib3J0Q29udHJvbGxlciB9IGZyb20gXCIuL2hlbHBlcnMvcmVzZXRhYmxlQWJvcnRDb250cm9sbGVyXCI7XHJcblxyXG5leHBvcnQgY29uc3QgRWx2aXNQcm92aWRlcjogUmVhY3QuRnVuY3Rpb25Db21wb25lbnQ8XHJcbiAgUHJvcHNXaXRoQ2hpbGRyZW48eyBjb25maWc/OiBFbHZpc0NvbmZpZyB9PlxyXG4+ID0gKHsgY29uZmlnOiBlbHZpc0NvbmZpZywgY2hpbGRyZW4gfSkgPT4ge1xyXG4gIC8vISBTVEFURSBWQVJJQUJMRVMgLy9cclxuICBjb25zdCBbbG9hZGluZ0Rpc3BsYXllcnMsIHNldExvYWRpbmdEaXNwbGF5ZXJzXSA9IHVzZVN0YXRlPFxyXG4gICAgTG9hZGluZ0Rpc3BsYXllcltdXHJcbiAgPihbXSk7XHJcbiAgY29uc3QgW2Vycm9yRGlzcGxheWVycywgc2V0RXJyb3JEaXNwbGF5ZXJzXSA9IHVzZVN0YXRlPEVycm9yRGlzcGxheWVyW10+KFtdKTtcclxuICBjb25zdCBbZGVmYXVsdExvYWRpbmdEaXNwbGF5ZXIsIHNldERlZmF1bHRMb2FkaW5nRGlzcGxheWVyXSA9XHJcbiAgICB1c2VTdGF0ZTxMb2FkaW5nRGlzcGxheWVyPigpO1xyXG4gIGNvbnN0IFtkZWZhdWx0RXJyb3JEaXNwbGF5ZXIsIHNldERlZmF1bHRFcnJvckRpc3BsYXllcl0gPVxyXG4gICAgdXNlU3RhdGU8RXJyb3JEaXNwbGF5ZXI+KCk7XHJcbiAgY29uc3QgW3BlbmRpbmdVbmNhdGNoYWJsZUVycm9ycywgc2V0UGVuZGluZ1VuY2F0Y2hhYmxlRXJyb3JzXSA9IHVzZVN0YXRlPFxyXG4gICAgeyBxdWVyeTogVXNlckZhY2luZ0FzeW5jRnVuY3Rpb247IGVycm9yOiB1bmtub3duIH1bXVxyXG4gID4oW10pO1xyXG4gIGNvbnN0IFtyZWdpc3RlcmVkRnVuY3Rpb25zLCBzZXRSZWdpc3RlcmVkRnVuY3Rpb25zXSA9IHVzZVN0YXRlPFxyXG4gICAgUmVjb3JkPHN0cmluZywgVXNlckZhY2luZ0FzeW5jRnVuY3Rpb24+XHJcbiAgPih7fSk7XHJcbiAgY29uc3QgW2Fib3J0Q29udHJvbGxlcnMsIHNldEFib3J0Q29udHJvbGxlcnNdID0gdXNlU3RhdGU8XHJcbiAgICBSZWNvcmQ8c3RyaW5nLCBBYm9ydENvbnRyb2xsZXI+XHJcbiAgPih7fSk7XHJcblxyXG4gIGNvbnN0IFt3cmFwcGVkRnVuY3Rpb25zLCBzZXRXcmFwcGVkRnVuY3Rpb25zXSA9IHVzZVN0YXRlPFxyXG4gICAgUmVjb3JkPHN0cmluZywgKC4uLmFyZ3M6IGFueVtdKSA9PiBQcm9taXNlPGFueT4+XHJcbiAgPih7fSk7XHJcbiAgY29uc3QgW2FzeW5jRnVuY3Rpb25FeGVjdXRpb25RdWV1ZSwgc2V0QXN5bmNGdW5jdGlvbkV4ZWN1dGlvblF1ZXVlXSA9XHJcbiAgICB1c2VTdGF0ZTxGdW5jdGlvbkV4ZWN1dGlvblJlcXVlc3RbXT4oW10pO1xyXG4gIGNvbnN0IFthYm9ydEV2ZW50c1F1ZXVlLCBzZXRBYm9ydEV2ZW50c1F1ZXVlXSA9IHVzZVN0YXRlPHN0cmluZ1tdPihbXSk7XHJcblxyXG4gIC8vICEgSEVMUEVSIFRPIFNFVFVQIEFCT1JUIENPTlRST0xMRVIgT04gTkVXIFJFR0lTVEVSIFJFUVVFU1QgLy9cclxuICBjb25zdCBzZXR1cEFib3J0Q29udHJvbGxlckZvck5ld0FzeW5jRnVuY3Rpb24gPSB1c2VDYWxsYmFjayhcclxuICAgIChpZDogc3RyaW5nKSA9PiB7XHJcbiAgICAgIHNldEFib3J0Q29udHJvbGxlcnMoKHByZXYpID0+IHtcclxuICAgICAgICBpZiAoaWQgaW4gcHJldiAmJiBwcmV2W2lkXSkgcmV0dXJuIHByZXY7XHJcbiAgICAgICAgY29uc3QgYyA9IHJlc2V0YWJsZUFib3J0Q29udHJvbGxlcihcclxuICAgICAgICAgIChmcmVzaDogQWJvcnRDb250cm9sbGVyKSA9PlxyXG4gICAgICAgICAgICBzZXRBYm9ydENvbnRyb2xsZXJzKChwcmV2KSA9PiB7XHJcbiAgICAgICAgICAgICAgcmV0dXJuIHsgLi4ucHJldiwgW2lkXTogZnJlc2ggfTtcclxuICAgICAgICAgICAgfSksXHJcbiAgICAgICAgICAoZTogRXZlbnQpID0+IHtcclxuICAgICAgICAgICAgc2V0QWJvcnRFdmVudHNRdWV1ZSgocHJldikgPT4ge1xyXG4gICAgICAgICAgICAgIHJldHVybiBbLi4ucHJldiwgaWRdO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgIH1cclxuICAgICAgICApO1xyXG4gICAgICAgIHJldHVybiB7IC4uLnByZXYsIFtpZF06IGMgfTtcclxuICAgICAgfSk7XHJcbiAgICB9LFxyXG4gICAgW3NldEFib3J0Q29udHJvbGxlcnNdXHJcbiAgKTtcclxuICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgaWYgKCFhYm9ydEV2ZW50c1F1ZXVlLmxlbmd0aCkgcmV0dXJuO1xyXG4gICAgc2V0QWJvcnRFdmVudHNRdWV1ZSgocHJldikgPT4ge1xyXG4gICAgICBjb25zdCBzID0gbmV3IFNldChwcmV2KTtcclxuICAgICAgcy5mb3JFYWNoKChpZCkgPT4ge1xyXG4gICAgICAgIGhhbmRsZUxvYWRpbmdDYW5jZWwoaWQpO1xyXG4gICAgICB9KTtcclxuICAgICAgcmV0dXJuIFtdO1xyXG4gICAgfSk7XHJcbiAgfSwgW2Fib3J0RXZlbnRzUXVldWVdKTtcclxuXHJcbiAgLy8hIEhhbmRsaW5nIGZ1bmN0aW9uIGV4ZWN1dGlvbnMgLy9cclxuXHJcbiAgLy9oYW5kbGUgYXN5bmMgZnVuY3Rpb24gZXhlY3V0aW9ucywgdHJ5IGFsbCBvZiB0aGVtIHdoZW5ldmVyIGV4ZWN1dGlvbiBxdWV1ZSBvciByZWdpc3RlcmVkIGZ1bmN0aW9ucyBjaGFuZ2VzXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIGlmICghYXN5bmNGdW5jdGlvbkV4ZWN1dGlvblF1ZXVlLmxlbmd0aCkgcmV0dXJuO1xyXG4gICAgcHJvY2Vzc0FzeW5jRnVuY3Rpb25FeGVjdXRpb25RdWV1ZShcclxuICAgICAgYXN5bmNGdW5jdGlvbkV4ZWN1dGlvblF1ZXVlLFxyXG4gICAgICByZWdpc3RlcmVkRnVuY3Rpb25zLFxyXG4gICAgICBydW5Bc3luY0Z1bmN0aW9uV2l0aEV2ZW50SGFuZGxlcnMsXHJcbiAgICAgIHNldEFzeW5jRnVuY3Rpb25FeGVjdXRpb25RdWV1ZVxyXG4gICAgKTtcclxuICB9LCBbYXN5bmNGdW5jdGlvbkV4ZWN1dGlvblF1ZXVlLCByZWdpc3RlcmVkRnVuY3Rpb25zXSk7XHJcblxyXG4gIC8vISBESVNQTEFZRVIgRklOREVSUyAvL1xyXG4gIGNvbnN0IGZpbmRMb2FkaW5nRGlzcGxheWVyID0gdXNlQ2FsbGJhY2soXHJcbiAgICAoaWQ6IHN0cmluZykgPT4ge1xyXG4gICAgICBjb25zdCBkaXNwbGF5ZXIgPSBsb2FkaW5nRGlzcGxheWVycy5maW5kKChkKSA9PiBkLmlkID09PSBpZCk7XHJcbiAgICAgIGNvbnN0IGQgPSBkaXNwbGF5ZXIgfHwgZGVmYXVsdExvYWRpbmdEaXNwbGF5ZXI7XHJcbiAgICAgIGFzc2VydChcclxuICAgICAgICBkLFxyXG4gICAgICAgIGBObyBkZWZhdWx0IExvYWRpbmcgRGlzcGxheWVyIGZvdW5kLiAke2lkfSBhbmQgJHtKU09OLnN0cmluZ2lmeShcclxuICAgICAgICAgIGxvYWRpbmdEaXNwbGF5ZXJzXHJcbiAgICAgICAgKX1gXHJcbiAgICAgICk7XHJcbiAgICAgIHJldHVybiBkO1xyXG4gICAgfSxcclxuICAgIFtsb2FkaW5nRGlzcGxheWVycywgZGVmYXVsdExvYWRpbmdEaXNwbGF5ZXJdXHJcbiAgKTtcclxuXHJcbiAgY29uc3QgZmluZEVycm9yRGlzcGxheWVycyA9IHVzZUNhbGxiYWNrKFxyXG4gICAgKGlkOiBzdHJpbmcsIGVycm9yOiB1bmtub3duKSA9PiB7XHJcbiAgICAgIHJldHVybiBmaW5kRXJyb3JEaXNwbGF5ZXJzX0ludGVybmFscyhcclxuICAgICAgICBlcnJvckRpc3BsYXllcnMsXHJcbiAgICAgICAgZGVmYXVsdEVycm9yRGlzcGxheWVyLFxyXG4gICAgICAgIGlkLFxyXG4gICAgICAgIGVycm9yXHJcbiAgICAgICk7XHJcbiAgICB9LFxyXG4gICAgW2Vycm9yRGlzcGxheWVycywgZGVmYXVsdEVycm9yRGlzcGxheWVyXVxyXG4gICk7XHJcbiAgY29uc3QgZmluZEFsbEVycm9yRGlzcGxheWVycyA9IHVzZUNhbGxiYWNrKFxyXG4gICAgKGlkOiBzdHJpbmcpID0+IHtcclxuICAgICAgY29uc3QgZGlzcGxheWVycyA9IGVycm9yRGlzcGxheWVycy5maWx0ZXIoKGQpID0+IGQuaWQgPT09IGlkKTtcclxuICAgICAgaWYgKGRpc3BsYXllcnMubGVuZ3RoID4gMCkge1xyXG4gICAgICAgIHJldHVybiBkaXNwbGF5ZXJzO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGlmIChkZWZhdWx0RXJyb3JEaXNwbGF5ZXIpIHtcclxuICAgICAgICAgIHJldHVybiBbZGVmYXVsdEVycm9yRGlzcGxheWVyXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTm8gZGVmYXVsdCBFcnJvciBEaXNwbGF5ZXIgZm91bmQuXCIpO1xyXG4gICAgICB9XHJcbiAgICB9LFxyXG4gICAgW2Vycm9yRGlzcGxheWVycywgZGVmYXVsdEVycm9yRGlzcGxheWVyXVxyXG4gICk7XHJcbiAgLy8hIEVWRU5UIEhBTkRMRVJTIC8vXHJcbiAgY29uc3QgaGFuZGxlTG9hZGluZ1N0YXJ0ID0gdXNlQ2FsbGJhY2soXHJcbiAgICAoaWQ6IHN0cmluZykgPT4ge1xyXG4gICAgICBjb25zdCBkID0gZmluZExvYWRpbmdEaXNwbGF5ZXIoaWQpO1xyXG4gICAgICBjb25zdCBmID0gcmVnaXN0ZXJlZEZ1bmN0aW9uc1tpZF07XHJcbiAgICAgIGQub25Mb2FkaW5nU3RhcnQoXHJcbiAgICAgICAgZj8uY29uZmlnPy5sb2FkaW5nIHx8IERlZmF1bHRVc2VyRmFjaW5nTG9hZGluZyxcclxuICAgICAgICBhYm9ydENvbnRyb2xsZXJzW2lkXVxyXG4gICAgICApO1xyXG4gICAgICAvLyBlcnJvciBkaXNwbGF5ZXJcclxuICAgICAgY29uc3QgZXJyb3JEaXNwbGF5ZXJzID0gZmluZEFsbEVycm9yRGlzcGxheWVycyhpZCk7XHJcbiAgICAgIGVycm9yRGlzcGxheWVycy5mb3JFYWNoKChkKSA9PiB7XHJcbiAgICAgICAgZC5vbk5ld0Z1bmN0aW9uQ2FsbCgpO1xyXG4gICAgICB9KTtcclxuICAgIH0sXHJcbiAgICBbZmluZEFsbEVycm9yRGlzcGxheWVycywgZmluZExvYWRpbmdEaXNwbGF5ZXIsIHJlZ2lzdGVyZWRGdW5jdGlvbnNdXHJcbiAgKTtcclxuICBjb25zdCBoYW5kbGVMb2FkaW5nQ2FuY2VsID0gdXNlQ2FsbGJhY2soXHJcbiAgICAoaWQ6IHN0cmluZykgPT4ge1xyXG4gICAgICBjb25zdCBkID0gZmluZExvYWRpbmdEaXNwbGF5ZXIoaWQpO1xyXG4gICAgICBjb25zdCBmID0gcmVnaXN0ZXJlZEZ1bmN0aW9uc1tpZF07XHJcbiAgICAgIGQub25Mb2FkaW5nQ2FuY2VsKGY/LmNvbmZpZz8uY2FuY2VsbGVkIHx8IERlZmF1bHRVc2VyRmFjaW5nQ2FuY2VsbGVkKTtcclxuICAgIH0sXHJcbiAgICBbZmluZExvYWRpbmdEaXNwbGF5ZXIsIHJlZ2lzdGVyZWRGdW5jdGlvbnNdXHJcbiAgKTtcclxuICBjb25zdCBoYW5kbGVMb2FkaW5nRW5kID0gdXNlQ2FsbGJhY2soXHJcbiAgICAoaWQ6IHN0cmluZykgPT4ge1xyXG4gICAgICBjb25zdCBkID0gZmluZExvYWRpbmdEaXNwbGF5ZXIoaWQpO1xyXG4gICAgICBjb25zdCBmID0gcmVnaXN0ZXJlZEZ1bmN0aW9uc1tpZF07XHJcbiAgICAgIGQub25Mb2FkaW5nRW5kKGY/LmNvbmZpZz8uc3VjY2VzcyB8fCBEZWZhdWx0VXNlckZhY2luZ1N1Y2Nlc3MpO1xyXG4gICAgfSxcclxuICAgIFtmaW5kTG9hZGluZ0Rpc3BsYXllciwgcmVnaXN0ZXJlZEZ1bmN0aW9uc11cclxuICApO1xyXG4gIGNvbnN0IGhhbmRsZUVycm9yRGV0ZWN0ZWQgPSB1c2VDYWxsYmFjayhcclxuICAgIChpZDogc3RyaW5nLCBlcnJvcjogdW5rbm93bikgPT4ge1xyXG4gICAgICBoYW5kbGVFcnJvckRldGVjdGVkX0ludGVybmFscyhcclxuICAgICAgICBpZCxcclxuICAgICAgICBlcnJvcixcclxuICAgICAgICByZWdpc3RlcmVkRnVuY3Rpb25zLFxyXG4gICAgICAgIGZpbmRFcnJvckRpc3BsYXllcnMsXHJcbiAgICAgICAgZmluZExvYWRpbmdEaXNwbGF5ZXJcclxuICAgICAgKTtcclxuICAgIH0sXHJcbiAgICBbZmluZExvYWRpbmdEaXNwbGF5ZXIsIGZpbmRFcnJvckRpc3BsYXllcnMsIHJlZ2lzdGVyZWRGdW5jdGlvbnNdXHJcbiAgKTtcclxuICAvLyEgREVGQVVMVCBESVNQTEFZRVJTIENIRUNLIC8vXHJcbiAgLy93YWl0IGZvciBhcHAgdG8gbG9hZCwgdGhlbiBjaGVjayBmb3IgZGVmYXVsdCBkaXNwbGF5ZXJzXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICBzZXREZWZhdWx0RXJyb3JEaXNwbGF5ZXIoKHByZXYpID0+IHtcclxuICAgICAgICBpZiAoIXByZXYgJiYgIWVsdmlzQ29uZmlnPy5kaXNhYmxlRGVmYXVsdEVycm9yRGlzcGxheWVyQ2hlY2spIHtcclxuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcclxuICAgICAgICAgICAgXCJObyBkZWZhdWx0IGVycm9yIGRpc3BsYXllciBmb3VuZC4gUGxlYXNlIHJlZ2lzdGVyIGEgZGVmYXVsdCBlcnJvciBkaXNwbGF5ZXIgb3IgZGlzYWJsZSB0aGUgZGVmYXVsdCBkaXNwbGF5ZXIgY2hlY2sgdXNpbmcgdGhlIGNvbmZpZyBwcm9wIGluIHRoZSBFYWxzIFByb3ZpZGVyLlwiXHJcbiAgICAgICAgICApO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gcHJldjtcclxuICAgICAgfSk7XHJcbiAgICAgIHNldERlZmF1bHRMb2FkaW5nRGlzcGxheWVyKChwcmV2KSA9PiB7XHJcbiAgICAgICAgaWYgKCFwcmV2ICYmICFlbHZpc0NvbmZpZz8uZGlzYWJsZURlZmF1bHRMb2FkaW5nRGlzcGxheWVyQ2hlY2spIHtcclxuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcclxuICAgICAgICAgICAgXCJObyBkZWZhdWx0IGxvYWRpbmcgZGlzcGxheWVyIGZvdW5kLiBQbGVhc2UgcmVnaXN0ZXIgYSBkZWZhdWx0IGxvYWRpbmcgZGlzcGxheWVyIG9yIGRpc2FibGUgdGhlIGRlZmF1bHQgZGlzcGxheWVyIGNoZWNrIHVzaW5nIHRoZSBjb25maWcgcHJvcCBpbiB0aGUgRWFscyBQcm92aWRlci5cIlxyXG4gICAgICAgICAgKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHByZXY7XHJcbiAgICAgIH0pO1xyXG4gICAgfSwgZWx2aXNDb25maWc/LmdyYWNlVGltZVRvRGV0ZWN0RGVmYXVsdERpc3BsYXllcnMgfHwgMTAwMCk7XHJcbiAgfSwgW10pO1xyXG5cclxuICAvLyEgVU5IQU5ETEVEIFBST01JU0UgUkVKRUNUSU9OIEhBTkRMRVIgLy9cclxuICAvLyBmaWx0ZXIgZm9yIHdoZW4gdGhlIHVzZXIncyBjb2RlIGlzIG1pc3NpbmcgcHJvbWlzZSByZWplY3Rpb24gaGFuZGxlcnNcclxuICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgcmVnaXN0ZXJVbmFib3J0YWJsZShcclxuICAgICAgXCJ1bmhhbmRsZWRyZWplY3Rpb25cIixcclxuICAgICAgYXN5bmMgKCkgPT4ge30sXHJcbiAgICAgIHVuaGFuZGxlZFByb21pc2VSZWplY3Rpb25FcnJvclxyXG4gICAgKTtcclxuICAgIGNvbnN0IHVuaGFuZGxlZFJlamVjdGlvbkhhbmRsZXIgPSAoZXZlbnQ6IGFueSkgPT4ge1xyXG4gICAgICBzZXRQZW5kaW5nVW5jYXRjaGFibGVFcnJvcnMoKHByZXYpID0+IHtcclxuICAgICAgICByZXR1cm4gW1xyXG4gICAgICAgICAgLi4ucHJldixcclxuICAgICAgICAgIHtcclxuICAgICAgICAgICAgcXVlcnk6IHtcclxuICAgICAgICAgICAgICBpZDogXCJ1bmhhbmRsZWRyZWplY3Rpb25cIixcclxuICAgICAgICAgICAgICB2ZXJzaW9uVGltZXN0YW1wOiAtMSwgLy8gZG9lcyBub3QgbWF0dGVyIGlzIG5vdCB1c2VkXHJcbiAgICAgICAgICAgICAgY2FsbGJhY2s6IGFzeW5jICgpID0+IHt9LCAvLyBkb2VzIG5vdCBtYXR0ZXIgaXMgbm90IHVzZWRcclxuICAgICAgICAgICAgICBjb25maWc6IHVuaGFuZGxlZFByb21pc2VSZWplY3Rpb25FcnJvcixcclxuICAgICAgICAgICAgICBhYm9ydGFibGU6IFwibm90LWFib3J0YWJsZVwiLCAvLyBkb2VzIG5vdCBtYXR0ZXIgaXMgbm90IHVzZWRcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgZXJyb3I6IGV2ZW50LnJlYXNvbixcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgXTtcclxuICAgICAgfSk7XHJcbiAgICB9O1xyXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJ1bmhhbmRsZWRyZWplY3Rpb25cIiwgdW5oYW5kbGVkUmVqZWN0aW9uSGFuZGxlciwge1xyXG4gICAgICBvbmNlOiB0cnVlLFxyXG4gICAgfSk7XHJcbiAgICByZXR1cm4gKCkgPT4ge1xyXG4gICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcclxuICAgICAgICBcInVuaGFuZGxlZHJlamVjdGlvblwiLFxyXG4gICAgICAgIHVuaGFuZGxlZFJlamVjdGlvbkhhbmRsZXJcclxuICAgICAgKTtcclxuICAgIH07XHJcbiAgfSwgW10pO1xyXG5cclxuICAvLyBoYW5kbGUgdGhlIHVuY2F0Y2hhYmxlIGVycm9yc1xyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICBpZiAocGVuZGluZ1VuY2F0Y2hhYmxlRXJyb3JzLmxlbmd0aCA+IDApIHtcclxuICAgICAgY29uc3QgZXJyb3IgPSBwZW5kaW5nVW5jYXRjaGFibGVFcnJvcnNbMF07XHJcbiAgICAgIGhhbmRsZUVycm9yRGV0ZWN0ZWQoZXJyb3IucXVlcnkuaWQsIGVycm9yLmVycm9yKTtcclxuICAgICAgc2V0UGVuZGluZ1VuY2F0Y2hhYmxlRXJyb3JzKChwcmV2KSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHByZXYuc2xpY2UoMSk7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH0sIFtwZW5kaW5nVW5jYXRjaGFibGVFcnJvcnMsIGhhbmRsZUVycm9yRGV0ZWN0ZWRdKTtcclxuXHJcbiAgLy8hIFdSQVBQRVJTIC0gQ09SRSBGVU5DVElPTkFMSVRZIC8vXHJcblxyXG4gIGNvbnN0IGNyZWF0ZUZ1bmN0aW9uRXhlY3V0aW9uUmVxdWVzdEFuZEdldFByb21pc2UgPSB1c2VDYWxsYmFjayhcclxuICAgIChpZDogc3RyaW5nLCB2ZXJzaW9uVGltZXN0YW1wOiBudW1iZXIsIG5ld0FyZ3M6IGFueVtdKSA9PiB7XHJcbiAgICAgIHJldHVybiBuZXcgUHJvbWlzZTxhbnk+KChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuICAgICAgICBzZXRBc3luY0Z1bmN0aW9uRXhlY3V0aW9uUXVldWUoKHByZXYpID0+IHtcclxuICAgICAgICAgIHJldHVybiBbXHJcbiAgICAgICAgICAgIC4uLnByZXYsXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICBjYWxsZWRBdDogRGF0ZS5ub3coKSxcclxuICAgICAgICAgICAgICBpZCxcclxuICAgICAgICAgICAgICB2ZXJzaW9uVGltZXN0YW1wLFxyXG4gICAgICAgICAgICAgIGFyZ3M6IG5ld0FyZ3MsXHJcbiAgICAgICAgICAgICAgcmVzb2x2ZSxcclxuICAgICAgICAgICAgICByZWplY3QsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICBdO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICB9KTtcclxuICAgIH0sXHJcbiAgICBbXVxyXG4gICk7XHJcblxyXG4gIGNvbnN0IHJ1bkFzeW5jRnVuY3Rpb25XaXRoRXZlbnRIYW5kbGVycyA9IHVzZUNhbGxiYWNrKFxyXG4gICAgYXN5bmMgPEFyZ3NUeXBlIGV4dGVuZHMgYW55W10+KFxyXG4gICAgICBmOiBVc2VyRmFjaW5nQXN5bmNGdW5jdGlvbixcclxuICAgICAgYXJnczogQXJnc1R5cGVcclxuICAgICkgPT4ge1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIC8vIFNldCBsb2FkaW5nIHRvIHRydWUgd2hpbGUgdGhlIHJlcXVlc3QgaXMgaW4gcHJvZ3Jlc3NcclxuICAgICAgICBoYW5kbGVMb2FkaW5nU3RhcnQoZi5pZCk7XHJcbiAgICAgICAgaWYgKGYuYWJvcnRhYmxlID09PSBcImFib3J0YWJsZVwiKSB7XHJcbiAgICAgICAgICBjb25zdCBhYm9ydENvbnRyb2xsZXIgPSBhYm9ydENvbnRyb2xsZXJzW2YuaWRdO1xyXG4gICAgICAgICAgYXNzZXJ0KGFib3J0Q29udHJvbGxlciwgXCJObyBhYm9ydCBjb250cm9sbGVyIGZvdW5kIGZvciBpZCBcIiArIGYuaWQpO1xyXG4gICAgICAgICAgY29uc3QgW3Jlc3VsdCwgZXJyb3JdID0gYXdhaXQgY2F0Y2hQcm9taXNlRXJyb3JzKFxyXG4gICAgICAgICAgICAvLyBXZSBoYW5kbGUgcGFzc2luZyBpbiB0aGUgYWJvcnQgY29udHJvbGxlciBmb3IgdGhlbSwgdG8gbWFrZSB0aGUgZmluYWwgQVBJIGNsZWFuZXJcclxuICAgICAgICAgICAgZi5jYWxsYmFjayhhYm9ydENvbnRyb2xsZXIsIC4uLmFyZ3MpXHJcbiAgICAgICAgICApO1xyXG4gICAgICAgICAgaWYgKGVycm9yKSB7XHJcbiAgICAgICAgICAgIHRocm93IGVycm9yO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgaGFuZGxlTG9hZGluZ0VuZChmLmlkKTtcclxuICAgICAgICAgIHJldHVybiByZXN1bHQ7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGNvbnN0IFtyZXN1bHQsIGVycm9yXSA9IGF3YWl0IGNhdGNoUHJvbWlzZUVycm9ycyhmLmNhbGxiYWNrKC4uLmFyZ3MpKTtcclxuICAgICAgICAgIGlmIChlcnJvcikge1xyXG4gICAgICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIGhhbmRsZUxvYWRpbmdFbmQoZi5pZCk7XHJcbiAgICAgICAgICByZXR1cm4gcmVzdWx0O1xyXG4gICAgICAgIH1cclxuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICBoYW5kbGVMb2FkaW5nRW5kKGYuaWQpO1xyXG4gICAgICAgIGhhbmRsZUVycm9yRGV0ZWN0ZWQoZi5pZCwgZXJyb3IpO1xyXG4gICAgICB9XHJcbiAgICB9LFxyXG4gICAgW1xyXG4gICAgICBoYW5kbGVMb2FkaW5nU3RhcnQsXHJcbiAgICAgIGhhbmRsZUxvYWRpbmdFbmQsXHJcbiAgICAgIGhhbmRsZUVycm9yRGV0ZWN0ZWQsXHJcbiAgICAgIGFib3J0Q29udHJvbGxlcnMsXHJcbiAgICBdXHJcbiAgKTtcclxuXHJcbiAgLy8hIERpc3BsYXkgUmVnaXN0cmF0aW9uIEhlbHBlcnMgLy8vXHJcbiAgZnVuY3Rpb24gcmVnaXN0ZXJMb2FkaW5nRGlzcGxheWVyKGM6IExvYWRpbmdEaXNwbGF5ZXIpIHtcclxuICAgIHNldExvYWRpbmdEaXNwbGF5ZXJzKChwcmV2KSA9PiB7XHJcbiAgICAgIHJldHVybiBbLi4ucHJldiwgeyAuLi5jIH1dO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiByZWdpc3RlckRlZmF1bHRMb2FkaW5nRGlzcGxheWVyKGM6IExvYWRpbmdEaXNwbGF5ZXIpIHtcclxuICAgIHNldERlZmF1bHRMb2FkaW5nRGlzcGxheWVyKHsgLi4uYyB9KTtcclxuICB9XHJcblxyXG4gIC8vISBORVcgRlVOQ1RJT04gUkVHSVNUUkFUSU9OIEZVTkNUSU9OUyAvL1xyXG5cclxuICBjb25zdCByZWdpc3RlclVuYWJvcnRhYmxlID0gdXNlQ2FsbGJhY2soXHJcbiAgICA8QXJnc1R5cGUgZXh0ZW5kcyBhbnlbXSwgUmV0dXJuVHlwZT4oXHJcbiAgICAgIGlkOiBzdHJpbmcsXHJcbiAgICAgIGY6ICguLi5hcmdzOiBBcmdzVHlwZSkgPT4gUHJvbWlzZTxSZXR1cm5UeXBlPixcclxuICAgICAgY29uZmlnOiBFbHZpc0Rpc3BsYXlDb25maWdcclxuICAgICk6ICgoLi4uYXJnczogQXJnc1R5cGUpID0+IFByb21pc2U8UmV0dXJuVHlwZT4pID0+IHtcclxuICAgICAgY29uc3QgYWJvcnRhYmxlID0gXCJub3QtYWJvcnRhYmxlXCIgYXMgY29uc3Q7XHJcbiAgICAgIHNldFJlZ2lzdGVyZWRGdW5jdGlvbnMoKHByZXYpID0+IHtcclxuICAgICAgICBpZiAoaWRlbnRpY2FsQXN5bmNGdW5jdGlvblJlZ2lzdGVyZWQoaWQsIGYsIGNvbmZpZywgYWJvcnRhYmxlLCBwcmV2KSkge1xyXG4gICAgICAgICAgcmV0dXJuIHByZXY7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnN0IHRpbWVzdGFtcCA9IERhdGUubm93KCk7XHJcbiAgICAgICAgY29uc3QgcCA9IHByZXZbaWRdO1xyXG4gICAgICAgIGNvbnN0IGlzTmV3ID0gIXA7XHJcbiAgICAgICAgY29uc3QgbiA9IGlzTmV3XHJcbiAgICAgICAgICA/IHtcclxuICAgICAgICAgICAgICBpZCxcclxuICAgICAgICAgICAgICB2ZXJzaW9uVGltZXN0YW1wOiB0aW1lc3RhbXAsXHJcbiAgICAgICAgICAgICAgY2FsbGJhY2s6IGYsXHJcbiAgICAgICAgICAgICAgYWJvcnRhYmxlLFxyXG4gICAgICAgICAgICAgIGNvbmZpZyxcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgOiB7XHJcbiAgICAgICAgICAgICAgLi4ucCxcclxuICAgICAgICAgICAgICB2ZXJzaW9uVGltZXN0YW1wOiB0aW1lc3RhbXAsXHJcbiAgICAgICAgICAgICAgY2FsbGJhY2s6IGYsXHJcbiAgICAgICAgICAgICAgYWJvcnRhYmxlLFxyXG4gICAgICAgICAgICAgIGNvbmZpZyxcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICBzZXRXcmFwcGVkRnVuY3Rpb25zKChwcmV2KSA9PiB7XHJcbiAgICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICAuLi5wcmV2LFxyXG4gICAgICAgICAgICBbaWRdOiBhc3luYyAoLi4uYXJnczogYW55KSA9PiB7XHJcbiAgICAgICAgICAgICAgcmV0dXJuIGF3YWl0IGNyZWF0ZUZ1bmN0aW9uRXhlY3V0aW9uUmVxdWVzdEFuZEdldFByb21pc2UoXHJcbiAgICAgICAgICAgICAgICBpZCxcclxuICAgICAgICAgICAgICAgIHRpbWVzdGFtcCxcclxuICAgICAgICAgICAgICAgIGFyZ3NcclxuICAgICAgICAgICAgICApO1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgfTtcclxuICAgICAgICB9KTtcclxuICAgICAgICByZXR1cm4geyAuLi5wcmV2LCBbaWRdOiBuIH07XHJcbiAgICAgIH0pO1xyXG4gICAgICByZXR1cm4gd3JhcHBlZEZ1bmN0aW9uc1tpZF0gYXMgKC4uLmFyZ3M6IEFyZ3NUeXBlKSA9PiBQcm9taXNlPFJldHVyblR5cGU+O1xyXG4gICAgfSxcclxuICAgIFtyZWdpc3RlcmVkRnVuY3Rpb25zLCBhYm9ydENvbnRyb2xsZXJzXVxyXG4gICk7XHJcblxyXG4gIGNvbnN0IHJlZ2lzdGVyQWJvcnRhYmxlID0gdXNlQ2FsbGJhY2soXHJcbiAgICA8QXJnc1R5cGUgZXh0ZW5kcyBhbnlbXSwgUmV0dXJuVHlwZT4oXHJcbiAgICAgIGlkOiBzdHJpbmcsXHJcbiAgICAgIGY6IChcclxuICAgICAgICBhYm9ydENvbnRyb2xsZXI6IEFib3J0Q29udHJvbGxlcixcclxuICAgICAgICAuLi5hcmdzOiBBcmdzVHlwZVxyXG4gICAgICApID0+IFByb21pc2U8UmV0dXJuVHlwZT4sXHJcbiAgICAgIGNvbmZpZzogRWx2aXNEaXNwbGF5Q29uZmlnXHJcbiAgICApOiAoKC4uLmFyZ3M6IEFyZ3NUeXBlKSA9PiBQcm9taXNlPFJldHVyblR5cGU+KSA9PiB7XHJcbiAgICAgIGNvbnN0IGFib3J0YWJsZSA9IFwiYWJvcnRhYmxlXCIgYXMgY29uc3Q7XHJcbiAgICAgIHNldFJlZ2lzdGVyZWRGdW5jdGlvbnMoKHByZXYpID0+IHtcclxuICAgICAgICBpZiAoaWRlbnRpY2FsQXN5bmNGdW5jdGlvblJlZ2lzdGVyZWQoaWQsIGYsIGNvbmZpZywgYWJvcnRhYmxlLCBwcmV2KSkge1xyXG4gICAgICAgICAgcmV0dXJuIHByZXY7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnN0IHRpbWVzdGFtcCA9IERhdGUubm93KCk7XHJcbiAgICAgICAgY29uc3QgcCA9IHByZXZbaWRdO1xyXG4gICAgICAgIGNvbnN0IGlzTmV3ID0gIXA7XHJcbiAgICAgICAgY29uc3QgbiA9IGlzTmV3XHJcbiAgICAgICAgICA/IHtcclxuICAgICAgICAgICAgICBpZCxcclxuICAgICAgICAgICAgICB2ZXJzaW9uVGltZXN0YW1wOiB0aW1lc3RhbXAsXHJcbiAgICAgICAgICAgICAgY2FsbGJhY2s6IGYsXHJcbiAgICAgICAgICAgICAgYWJvcnRhYmxlLFxyXG4gICAgICAgICAgICAgIGNvbmZpZyxcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgOiB7XHJcbiAgICAgICAgICAgICAgLi4ucCxcclxuICAgICAgICAgICAgICB2ZXJzaW9uVGltZXN0YW1wOiB0aW1lc3RhbXAsXHJcbiAgICAgICAgICAgICAgY2FsbGJhY2s6IGYsXHJcbiAgICAgICAgICAgICAgYWJvcnRhYmxlLFxyXG4gICAgICAgICAgICAgIGNvbmZpZyxcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICBpZiAoaXNOZXcpIHtcclxuICAgICAgICAgIHNldHVwQWJvcnRDb250cm9sbGVyRm9yTmV3QXN5bmNGdW5jdGlvbihpZCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHNldFdyYXBwZWRGdW5jdGlvbnMoKHByZXYpID0+IHtcclxuICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIC4uLnByZXYsXHJcbiAgICAgICAgICAgIFtpZF06IGFzeW5jICguLi5hcmdzOiBhbnkpID0+IHtcclxuICAgICAgICAgICAgICByZXR1cm4gYXdhaXQgY3JlYXRlRnVuY3Rpb25FeGVjdXRpb25SZXF1ZXN0QW5kR2V0UHJvbWlzZShcclxuICAgICAgICAgICAgICAgIGlkLFxyXG4gICAgICAgICAgICAgICAgdGltZXN0YW1wLFxyXG4gICAgICAgICAgICAgICAgYXJnc1xyXG4gICAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICB9O1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiB7IC4uLnByZXYsIFtpZF06IG4gfTtcclxuICAgICAgfSk7XHJcbiAgICAgIHJldHVybiB3cmFwcGVkRnVuY3Rpb25zW2lkXSBhcyAoLi4uYXJnczogQXJnc1R5cGUpID0+IFByb21pc2U8UmV0dXJuVHlwZT47XHJcbiAgICB9LFxyXG4gICAgW3JlZ2lzdGVyZWRGdW5jdGlvbnMsIGFib3J0Q29udHJvbGxlcnMsIHdyYXBwZWRGdW5jdGlvbnNdXHJcbiAgKTtcclxuXHJcbiAgLy8hIFVTRVIgRkFDSU5HIEZVTkNUSU9OU1xyXG5cclxuICBjb25zdCB1ZlJlZ2lzdGVyQWJvcnRhYmxlID0gdXNlQ2FsbGJhY2soXHJcbiAgICA8QXJnc1R5cGUgZXh0ZW5kcyBhbnlbXSwgUmV0dXJuVHlwZT4oXHJcbiAgICAgIGlkZW50aWZpZXI6IHN0cmluZyxcclxuICAgICAgZl91bndyYXBwZWQ6IChcclxuICAgICAgICBhYm9ydENvbnRyb2xsZXI6IEFib3J0Q29udHJvbGxlcixcclxuICAgICAgICAuLi5hcmdzOiBBcmdzVHlwZVxyXG4gICAgICApID0+IFByb21pc2U8UmV0dXJuVHlwZT4sXHJcbiAgICAgIGNvbmZpZzogRWx2aXNEaXNwbGF5Q29uZmlnXHJcbiAgICApID0+IHtcclxuICAgICAgcmV0dXJuIHVzZVJlZ2lzdGVyQXN5bmNGdW5jdGlvbkFib3J0YWJsZShcclxuICAgICAgICBpZGVudGlmaWVyLFxyXG4gICAgICAgIGZfdW53cmFwcGVkLFxyXG4gICAgICAgIGNvbmZpZyxcclxuICAgICAgICByZWdpc3RlckFib3J0YWJsZVxyXG4gICAgICApO1xyXG4gICAgfSxcclxuICAgIFtyZWdpc3RlckFib3J0YWJsZV1cclxuICApO1xyXG4gIGNvbnN0IHVmUmVnaXN0ZXJVbmFib3J0YWJsZSA9IHVzZUNhbGxiYWNrKFxyXG4gICAgPEFyZ3NUeXBlIGV4dGVuZHMgYW55W10sIFJldHVyblR5cGU+KFxyXG4gICAgICBpZGVudGlmaWVyOiBzdHJpbmcsXHJcbiAgICAgIGZfdW53cmFwcGVkOiAoLi4uYXJnczogQXJnc1R5cGUpID0+IFByb21pc2U8UmV0dXJuVHlwZT4sXHJcbiAgICAgIGNvbmZpZzogRWx2aXNEaXNwbGF5Q29uZmlnXHJcbiAgICApID0+IHtcclxuICAgICAgcmV0dXJuIHVzZVJlZ2lzdGVyQXN5bmNGdW5jdGlvbihcclxuICAgICAgICBpZGVudGlmaWVyLFxyXG4gICAgICAgIGZfdW53cmFwcGVkLFxyXG4gICAgICAgIGNvbmZpZyxcclxuICAgICAgICByZWdpc3RlclVuYWJvcnRhYmxlXHJcbiAgICAgICk7XHJcbiAgICB9LFxyXG4gICAgW3JlZ2lzdGVyVW5hYm9ydGFibGVdXHJcbiAgKTtcclxuXHJcbiAgY29uc3QgZ2V0QWJvcnRDb250cm9sbGVyID0gdXNlQ2FsbGJhY2soXHJcbiAgICAoaWQ6IHN0cmluZykgPT4ge1xyXG4gICAgICBpZiAoIWFib3J0Q29udHJvbGxlcnNbaWRdKSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTm8gYWJvcnQgY29udHJvbGxlciBmb3VuZCBmb3IgaWQgXCIgKyBpZCk7XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIGFib3J0Q29udHJvbGxlcnNbaWRdO1xyXG4gICAgfSxcclxuICAgIFthYm9ydENvbnRyb2xsZXJzXVxyXG4gICk7XHJcblxyXG4gIGZ1bmN0aW9uIGRpc3BsYXlFcnJvckRlZmF1bHQoKSB7XHJcbiAgICByZXR1cm4gdXNlRXJyb3JEaXNwbGF5U2V0dXAoXCJcIiwgKGM6IEVycm9yRGlzcGxheWVyKSA9PlxyXG4gICAgICBzZXREZWZhdWx0RXJyb3JEaXNwbGF5ZXIoeyAuLi5jIH0pXHJcbiAgICApO1xyXG4gIH1cclxuICBmdW5jdGlvbiBkaXNwbGF5RXJyb3JIYW5kbGUoaWQ6IHN0cmluZykge1xyXG4gICAgcmV0dXJuIHVzZUVycm9yRGlzcGxheVNldHVwKGlkLCAoYzogRXJyb3JEaXNwbGF5ZXIpID0+IHtcclxuICAgICAgc2V0RXJyb3JEaXNwbGF5ZXJzKChwcmV2KSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIFsuLi5wcmV2LCB7IC4uLmMgfV07XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgfVxyXG4gIGZ1bmN0aW9uIGRpc3BsYXlMb2FkaW5nRGVmYXVsdChcclxuICAgIGR1cmF0aW9uT2ZDYW5jZWxsZWRTdGF0ZTogbnVtYmVyLFxyXG4gICAgZHVyYXRpb25PZlN1Y2Nlc3NTdGF0ZTogbnVtYmVyXHJcbiAgKSB7XHJcbiAgICByZXR1cm4gdXNlTG9hZGluZ0Rpc3BsYXlTZXR1cChcclxuICAgICAgXCJcIixcclxuICAgICAgcmVnaXN0ZXJEZWZhdWx0TG9hZGluZ0Rpc3BsYXllcixcclxuICAgICAgZHVyYXRpb25PZkNhbmNlbGxlZFN0YXRlLFxyXG4gICAgICBkdXJhdGlvbk9mU3VjY2Vzc1N0YXRlXHJcbiAgICApO1xyXG4gIH1cclxuICBmdW5jdGlvbiBkaXNwbGF5TG9hZGluZ0hhbmRsZShcclxuICAgIGlkOiBzdHJpbmcsXHJcbiAgICBkdXJhdGlvbk9mQ2FuY2VsbGVkU3RhdGU6IG51bWJlcixcclxuICAgIGR1cmF0aW9uT2ZTdWNjZXNzU3RhdGU6IG51bWJlclxyXG4gICkge1xyXG4gICAgcmV0dXJuIHVzZUxvYWRpbmdEaXNwbGF5U2V0dXAoXHJcbiAgICAgIGlkLFxyXG4gICAgICByZWdpc3RlckxvYWRpbmdEaXNwbGF5ZXIsXHJcbiAgICAgIGR1cmF0aW9uT2ZDYW5jZWxsZWRTdGF0ZSxcclxuICAgICAgZHVyYXRpb25PZlN1Y2Nlc3NTdGF0ZVxyXG4gICAgKTtcclxuICB9XHJcbiAgcmV0dXJuIChcclxuICAgIDxFbHZpc0NvbnRleHQuUHJvdmlkZXJcclxuICAgICAgdmFsdWU9e3tcclxuICAgICAgICBhc3luYzoge1xyXG4gICAgICAgICAgd3JhcHBlZEZ1bmN0aW9uczogd3JhcHBlZEZ1bmN0aW9ucyxcclxuICAgICAgICAgIHJlZ2lzdGVyOiB1ZlJlZ2lzdGVyVW5hYm9ydGFibGUsXHJcbiAgICAgICAgICBhYm9ydGFibGU6IHtcclxuICAgICAgICAgICAgcmVnaXN0ZXI6IHVmUmVnaXN0ZXJBYm9ydGFibGUsXHJcbiAgICAgICAgICAgIGdldEFib3J0Q29udHJvbGxlcixcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfSxcclxuICAgICAgICBkaXNwbGF5OiB7XHJcbiAgICAgICAgICBlcnJvcjoge1xyXG4gICAgICAgICAgICBoYW5kbGU6IGRpc3BsYXlFcnJvckhhbmRsZSxcclxuICAgICAgICAgICAgZGVmYXVsdDogZGlzcGxheUVycm9yRGVmYXVsdCxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgICBsb2FkaW5nOiB7XHJcbiAgICAgICAgICAgIGhhbmRsZTogZGlzcGxheUxvYWRpbmdIYW5kbGUsXHJcbiAgICAgICAgICAgIGRlZmF1bHQ6IGRpc3BsYXlMb2FkaW5nRGVmYXVsdCxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfSxcclxuICAgICAgfX1cclxuICAgID5cclxuICAgICAge2NoaWxkcmVufVxyXG4gICAgPC9FbHZpc0NvbnRleHQuUHJvdmlkZXI+XHJcbiAgKTtcclxufTtcclxuIl0sIm5hbWVzIjpbIlJlYWN0IiwidXNlU3RhdGUiLCJ1c2VFZmZlY3QiLCJ1c2VDYWxsYmFjayIsIkRlZmF1bHRVc2VyRmFjaW5nTG9hZGluZyIsIkRlZmF1bHRVc2VyRmFjaW5nQ2FuY2VsbGVkIiwiRGVmYXVsdFVzZXJGYWNpbmdTdWNjZXNzIiwidW5oYW5kbGVkUHJvbWlzZVJlamVjdGlvbkVycm9yIiwiYXNzZXJ0IiwidXNlRXJyb3JEaXNwbGF5U2V0dXAiLCJ1c2VMb2FkaW5nRGlzcGxheVNldHVwIiwiRWx2aXNDb250ZXh0IiwiZmluZEVycm9yRGlzcGxheWVyc19JbnRlcm5hbHMiLCJoYW5kbGVFcnJvckRldGVjdGVkX0ludGVybmFscyIsInByb2Nlc3NBc3luY0Z1bmN0aW9uRXhlY3V0aW9uUXVldWUiLCJpZGVudGljYWxBc3luY0Z1bmN0aW9uUmVnaXN0ZXJlZCIsImNhdGNoUHJvbWlzZUVycm9ycyIsInVzZVJlZ2lzdGVyQXN5bmNGdW5jdGlvbiIsInVzZVJlZ2lzdGVyQXN5bmNGdW5jdGlvbkFib3J0YWJsZSIsInJlc2V0YWJsZUFib3J0Q29udHJvbGxlciIsIkVsdmlzUHJvdmlkZXIiLCJjb25maWciLCJlbHZpc0NvbmZpZyIsImNoaWxkcmVuIiwibG9hZGluZ0Rpc3BsYXllcnMiLCJzZXRMb2FkaW5nRGlzcGxheWVycyIsImVycm9yRGlzcGxheWVycyIsInNldEVycm9yRGlzcGxheWVycyIsImRlZmF1bHRMb2FkaW5nRGlzcGxheWVyIiwic2V0RGVmYXVsdExvYWRpbmdEaXNwbGF5ZXIiLCJkZWZhdWx0RXJyb3JEaXNwbGF5ZXIiLCJzZXREZWZhdWx0RXJyb3JEaXNwbGF5ZXIiLCJwZW5kaW5nVW5jYXRjaGFibGVFcnJvcnMiLCJzZXRQZW5kaW5nVW5jYXRjaGFibGVFcnJvcnMiLCJyZWdpc3RlcmVkRnVuY3Rpb25zIiwic2V0UmVnaXN0ZXJlZEZ1bmN0aW9ucyIsImFib3J0Q29udHJvbGxlcnMiLCJzZXRBYm9ydENvbnRyb2xsZXJzIiwid3JhcHBlZEZ1bmN0aW9ucyIsInNldFdyYXBwZWRGdW5jdGlvbnMiLCJhc3luY0Z1bmN0aW9uRXhlY3V0aW9uUXVldWUiLCJzZXRBc3luY0Z1bmN0aW9uRXhlY3V0aW9uUXVldWUiLCJhYm9ydEV2ZW50c1F1ZXVlIiwic2V0QWJvcnRFdmVudHNRdWV1ZSIsInNldHVwQWJvcnRDb250cm9sbGVyRm9yTmV3QXN5bmNGdW5jdGlvbiIsImlkIiwicHJldiIsImMiLCJmcmVzaCIsImUiLCJsZW5ndGgiLCJzIiwiU2V0IiwiZm9yRWFjaCIsImhhbmRsZUxvYWRpbmdDYW5jZWwiLCJydW5Bc3luY0Z1bmN0aW9uV2l0aEV2ZW50SGFuZGxlcnMiLCJmaW5kTG9hZGluZ0Rpc3BsYXllciIsImRpc3BsYXllciIsImZpbmQiLCJkIiwiSlNPTiIsInN0cmluZ2lmeSIsImZpbmRFcnJvckRpc3BsYXllcnMiLCJlcnJvciIsImZpbmRBbGxFcnJvckRpc3BsYXllcnMiLCJkaXNwbGF5ZXJzIiwiZmlsdGVyIiwiRXJyb3IiLCJoYW5kbGVMb2FkaW5nU3RhcnQiLCJmIiwib25Mb2FkaW5nU3RhcnQiLCJsb2FkaW5nIiwib25OZXdGdW5jdGlvbkNhbGwiLCJvbkxvYWRpbmdDYW5jZWwiLCJjYW5jZWxsZWQiLCJoYW5kbGVMb2FkaW5nRW5kIiwib25Mb2FkaW5nRW5kIiwic3VjY2VzcyIsImhhbmRsZUVycm9yRGV0ZWN0ZWQiLCJzZXRUaW1lb3V0IiwiZGlzYWJsZURlZmF1bHRFcnJvckRpc3BsYXllckNoZWNrIiwiZGlzYWJsZURlZmF1bHRMb2FkaW5nRGlzcGxheWVyQ2hlY2siLCJncmFjZVRpbWVUb0RldGVjdERlZmF1bHREaXNwbGF5ZXJzIiwicmVnaXN0ZXJVbmFib3J0YWJsZSIsInVuaGFuZGxlZFJlamVjdGlvbkhhbmRsZXIiLCJldmVudCIsInF1ZXJ5IiwidmVyc2lvblRpbWVzdGFtcCIsImNhbGxiYWNrIiwiYWJvcnRhYmxlIiwicmVhc29uIiwid2luZG93IiwiYWRkRXZlbnRMaXN0ZW5lciIsIm9uY2UiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwic2xpY2UiLCJjcmVhdGVGdW5jdGlvbkV4ZWN1dGlvblJlcXVlc3RBbmRHZXRQcm9taXNlIiwibmV3QXJncyIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwiY2FsbGVkQXQiLCJEYXRlIiwibm93IiwiYXJncyIsImFib3J0Q29udHJvbGxlciIsInJlc3VsdCIsInJlZ2lzdGVyTG9hZGluZ0Rpc3BsYXllciIsInJlZ2lzdGVyRGVmYXVsdExvYWRpbmdEaXNwbGF5ZXIiLCJ0aW1lc3RhbXAiLCJwIiwiaXNOZXciLCJuIiwicmVnaXN0ZXJBYm9ydGFibGUiLCJ1ZlJlZ2lzdGVyQWJvcnRhYmxlIiwiaWRlbnRpZmllciIsImZfdW53cmFwcGVkIiwidWZSZWdpc3RlclVuYWJvcnRhYmxlIiwiZ2V0QWJvcnRDb250cm9sbGVyIiwiZGlzcGxheUVycm9yRGVmYXVsdCIsImRpc3BsYXlFcnJvckhhbmRsZSIsImRpc3BsYXlMb2FkaW5nRGVmYXVsdCIsImR1cmF0aW9uT2ZDYW5jZWxsZWRTdGF0ZSIsImR1cmF0aW9uT2ZTdWNjZXNzU3RhdGUiLCJkaXNwbGF5TG9hZGluZ0hhbmRsZSIsIlByb3ZpZGVyIiwidmFsdWUiLCJhc3luYyIsInJlZ2lzdGVyIiwiZGlzcGxheSIsImhhbmRsZSIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/react-elvis/components/elvis-context/ElvisProvider.tsx\n"));

/***/ })

});